// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TenderDocumentsScraper.Data;

namespace IRobotAlina.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20201029110512_ConfigurationItem")]
    partial class ConfigurationItem
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("IRobotAlina.Data.Entities.ConfigurationItem", b =>
                {
                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Type");

                    b.ToTable("ConfigurationItems");

                    b.HasData(
                        new
                        {
                            Type = 0
                        },
                        new
                        {
                            Type = 1
                        },
                        new
                        {
                            Type = 2
                        },
                        new
                        {
                            Type = 3
                        },
                        new
                        {
                            Type = 4
                        },
                        new
                        {
                            Type = 5
                        });
                });

            modelBuilder.Entity("IRobotAlina.Data.Entities.Tender", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ExternalId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenderPlatformId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("TenderPlatformId");

                    b.ToTable("Tenders");
                });

            modelBuilder.Entity("IRobotAlina.Data.Entities.TenderFileAttachment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte[]>("Content")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("ExtractedText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TenderId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TenderId");

                    b.ToTable("TenderFileAttachments");
                });

            modelBuilder.Entity("IRobotAlina.Data.Entities.TenderMail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsProcessed")
                        .HasColumnType("bit");

                    b.Property<string>("UIDL")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TenderMails");
                });

            modelBuilder.Entity("IRobotAlina.Data.Entities.TenderPlatform", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TenderPlatforms");

                    b.HasData(
                        new
                        {
                            Id = "58fbc48e-b203-42b0-8d08-caf75a1a4ed1",
                            Name = "Zakupki"
                        });
                });

            modelBuilder.Entity("IRobotAlina.Data.Entities.Tender", b =>
                {
                    b.HasOne("IRobotAlina.Data.Entities.TenderPlatform", "TenderPlatform")
                        .WithMany("Tenders")
                        .HasForeignKey("TenderPlatformId");
                });

            modelBuilder.Entity("IRobotAlina.Data.Entities.TenderFileAttachment", b =>
                {
                    b.HasOne("IRobotAlina.Data.Entities.Tender", "Tender")
                        .WithMany("FileAttachments")
                        .HasForeignKey("TenderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
